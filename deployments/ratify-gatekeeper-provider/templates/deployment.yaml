apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "ratify.fullname" . }}
  labels:
    {{- include "ratify.labels" . | nindent 4 }}
spec:
  replicas: {{ default 1 .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "ratify.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "ratify.selectorLabels" . | nindent 8 }}
        {{- if eq (index .Values.stores 0).credential.provider "azure" }}
        azure.workload.identity/use: "true"
        {{- end }}
    spec:
      {{- if .Values.serviceAccount.create }}
      serviceAccountName: {{ include "ratify.serviceAccountName" . }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsGroup: 65532
            runAsNonRoot: true
            runAsUser: 65532
            seccompProfile:
              type: RuntimeDefault
          command:
            - "/app/ratify-gatekeeper-provider"
          args:
            - "--address"
            - ":6001"
            - "--config"
            - "/usr/local/config.json"
            {{- if .Values.provider.timeout.validationTimeoutSeconds }}
            - "--verify-timeout"
            - {{ printf "%.1fs" (subf .Values.provider.timeout.validationTimeoutSeconds 0.1) }}
            {{- end }}
            {{- if .Values.provider.timeout.mutationTimeoutSeconds }}
            - "--mutate-timeout"
            - {{ printf "%.2fs" (subf .Values.provider.timeout.mutationTimeoutSeconds 0.05) }}
            {{- end }}
            - "--cert-file=/usr/local/tls/tls.crt"
            - "--key-file=/usr/local/tls/tls.key"
            {{- if .Values.provider.tls.disableCertRotation }}
            - "--disable-cert-rotation"
            {{- end }}
            {{- if .Values.provider.disableMutation }}
            - "--disable-mutation"
            {{- end }}
            {{- if .Values.provider.disableCRDManager }}
            - "--disable-crd-manager"
            {{- end }}
            {{- if (lookup "v1" "Secret" .Release.Namespace "gatekeeper-webhook-server-cert") }}
            - "--gatekeeper-ca-cert-file=/usr/local/tls/client-ca/ca.crt"
            {{- end }}
          ports:
            - containerPort: 6001
          volumeMounts:
            - mountPath: "/usr/local/tls"
              name: tls
              readOnly: true
            - mountPath: "/usr/local"
              name: ratify-config
              readOnly: true
            - mountPath: "/usr/local/notation/certs"
              name: notation-certs
              readOnly: true
            {{- if (lookup "v1" "Secret" .Release.Namespace "gatekeeper-webhook-server-cert") }}
            - mountPath: /usr/local/tls/client-ca
              name: client-ca-cert
              readOnly: true
            {{- end }}
          env:
            - name: RATIFY_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: RATIFY_NAME
              value: {{ include "ratify.fullname" . }}
      volumes:
        - name: ratify-config
          configMap:
            name: {{ include "ratify.fullname" . }}-configmap
        - name: notation-certs
          secret:
            secretName: {{ include "ratify.fullname" . }}-notation-certs
        {{- if (lookup "v1" "Secret" .Release.Namespace "gatekeeper-webhook-server-cert") }}
        - name: client-ca-cert
          secret:
            secretName: gatekeeper-webhook-server-cert
            items:
              - key: ca.crt
                path: ca.crt
        {{- end }}
        - name: tls
          secret:
            secretName: {{ include "ratify.fullname" . }}-tls
