name: publish-ghcr

on:
  push:
    tags:
      - v*
  workflow_dispatch:

permissions: read-all

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
      id-token: write
    environment: azure-publish
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@002fdce3c6a235733a90a27c80493a3241e56863 # v2.12.1
        with:
          egress-policy: audit
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683
      - name: Install Notation
        uses: notaryproject/notation-action/setup@b6fee73110795d6793253c673bd723f12bcf9bbb # v1.2.2
      - name: Az CLI login
        uses: azure/login@a65d910e8af852a8061c627c456678983e180302 # v2.2.0
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      - name: Cache AAD tokens
        run: |
          az version
          # Key Vault: 
          az account get-access-token --scope https://vault.azure.net/.default --output none
      - name: Prepare notation certificate
        run: |
          mkdir -p truststore/x509/ca/ratify-verify
          cp ./.well-known/pki-validation/ratify-verification.crt truststore/x509/ca/ratify-verify
      - name: prepare
        id: prepare
        run: |
          VERSION=${GITHUB_REF#refs/*/}
          BRANCH_NAME=${GITHUB_REF#refs/heads/}
          ORG_NAME=$(echo "$GITHUB_REPOSITORY" | cut -d'/' -f1)
          REPOSITORY=ghcr.io/${ORG_NAME}/ratify-gatekeeper-provider
          if [[ "${VERSION}" == "${BRANCH_NAME}" ]]; then
            VERSION=$(git rev-parse --short HEAD)
          fi
          echo "version=${VERSION}" >> $GITHUB_OUTPUT
          echo "ref=${REPOSITORY}:${VERSION}" >> $GITHUB_OUTPUT
      - name: Get tag
        run: |
          echo "TAG=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV
      - name: docker login
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3.4.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: docker build ratify
        run: |
          docker buildx create --use         
          docker buildx build -f ./Dockerfile \
            --attest type=provenance,mode=max \
            --platform linux/amd64,linux/arm64,linux/arm/v7 \
            --label org.opencontainers.image.revision=${{ github.sha }} \
            -t ${{ steps.prepare.outputs.ref }} \
            --push .
      - name: Sign with Notation
        uses: notaryproject/notation-action/sign@b6fee73110795d6793253c673bd723f12bcf9bbb # v1.2.2
        with:
          plugin_name: azure-kv
          plugin_url: ${{ vars.AZURE_KV_PLUGIN_URL }}
          plugin_checksum: ${{ vars.AZURE_KV_CHECKSUM }}
          key_id: ${{ secrets.AZURE_KV_KEY_ID }}
          target_artifact_reference: |-
            ${{ steps.prepare.outputs.ref }}
          signature_format: cose
      - name: Verify with Notation
        uses: notaryproject/notation-action/verify@b6fee73110795d6793253c673bd723f12bcf9bbb # v1.2.2
        with:
          target_artifact_reference: |-
            ${{ steps.prepare.outputs.ref }}
          trust_policy: ./.well-known/pki-validation/trustpolicy.json
          trust_store: truststore
      - name: clear
        if: always()
        run: |
          rm -f ${HOME}/.docker/config.json
