name: quick-start

permissions:
  contents: read

on:
  pull_request_target:
    types: [labeled]
  pull_request:
    branches:
      - main
      - dev
      - 1.0.0*
  push:
    branches:
      - 1.0.0*
      - dev
      - main
  workflow_dispatch:

jobs:
  test-quick-start:
    name: "Run quick start test"
    runs-on: ubuntu-latest
    timeout-minutes: 60
    permissions:
      contents: read
    strategy:
      matrix:
        KUBERNETES_VERSION: ["1.30.6"]
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@0080882f6c36860b6ba35c610c98ce87d4e2f26f # v2.10.2
        with:
          egress-policy: audit

      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: setup go environment
        uses: actions/setup-go@3041bf56c941b39c61721a86cd11f3bb1338122a # v5.2.0
        with:
          go-version: "1.22"
      - name: Run tidy
        run: go mod tidy
      - name: Bootstrap e2e
        run: |
          mkdir -p $GITHUB_WORKSPACE/bin
          echo "$GITHUB_WORKSPACE/bin" >> $GITHUB_PATH
          make e2e-bootstrap KUBERNETES_VERSION=${{ matrix.KUBERNETES_VERSION }}
          make generate-certs
      - name: Run e2e with config policy
        run: |
          make e2e-helmfile-install
          make e2e-helmfile-deploy-released-ratify
          make test-quick-start
      - name: Save logs
        if: ${{ always() }}
        run: |
          kubectl logs -n gatekeeper-system -l app=ratify --tail=-1 > logs-ratify-preinstall-${{ matrix.KUBERNETES_VERSION }}-config-policy.json
          kubectl logs -n gatekeeper-system -l app.kubernetes.io/name=ratify --tail=-1 > logs-ratify-${{ matrix.KUBERNETES_VERSION }}-config-policy.json
      - name: Upload artifacts
        uses: actions/upload-artifact@6f51ac03b9356f520e9adb1b1b7802705f340c2b # v4.5.0
        if: ${{ always() }}
        with:
          name: e2e-logs-${{ matrix.KUBERNETES_VERSION }}
          path: |
            logs-*.json
