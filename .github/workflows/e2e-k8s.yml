name: e2e-k8s

permissions:
  contents: read

on:
  workflow_call:
    inputs:
      k8s_version:
        description: "Kubernetes version"
        required: true
        default: "1.31.2"
        type: string
      gatekeeper_version:
        description: "Gatekeeper version"
        required: true
        default: "3.18.0"
        type: string

jobs:
  build_test_e2e:
    name: "Build and run e2e Test"
    runs-on: ubuntu-latest
    timeout-minutes: 35
    permissions:
      contents: read
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@0080882f6c36860b6ba35c610c98ce87d4e2f26f # v2.10.2
        with:
          egress-policy: audit

      - name: Check out code into the Go module directory
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: Set up Go 1.22
        uses: actions/setup-go@3041bf56c941b39c61721a86cd11f3bb1338122a # v5.2.0
        with:
          go-version: "1.22"
      - name: Restore Trivy cache
        uses: ./.github/actions/restore_trivy_cache
      - name: Bootstrap e2e
        run: |
          mkdir -p $GITHUB_WORKSPACE/bin
          echo "$GITHUB_WORKSPACE/bin" >> $GITHUB_PATH
          make e2e-bootstrap KUBERNETES_VERSION=${{ inputs.k8s_version }}
          make generate-certs
      - name: Run e2e with config policy
        run: |
          make e2e-deploy-gatekeeper GATEKEEPER_VERSION=${{ inputs.gatekeeper_version }}
          make e2e-deploy-ratify GATEKEEPER_VERSION=${{ inputs.gatekeeper_version }}
          make test-e2e GATEKEEPER_VERSION=${{ inputs.gatekeeper_version }}
      - name: Save logs
        if: ${{ always() }}
        run: |
          kubectl logs -n gatekeeper-system -l app=ratify --tail=-1 > logs-ratify-preinstall-${{ inputs.k8s_version }}-${{ inputs.gatekeeper_version }}-config-policy.json
          kubectl logs -n gatekeeper-system -l app.kubernetes.io/name=ratify --tail=-1 > logs-ratify-${{ inputs.k8s_version }}-${{ inputs.gatekeeper_version }}-config-policy.json
      - name: Run e2e with Rego policy
        run: |
          make deploy-rego-policy
          make test-e2e
      - name: Save logs
        if: ${{ always() }}
        run: |
          kubectl logs -n gatekeeper-system -l control-plane=controller-manager --tail=-1 > logs-externaldata-controller-${{ matrix.KUBERNETES_VERSION }}-${{ matrix.GATEKEEPER_VERSION }}.json
          kubectl logs -n gatekeeper-system -l control-plane=audit-controller --tail=-1 > logs-externaldata-audit-${{ matrix.KUBERNETES_VERSION }}-${{ matrix.GATEKEEPER_VERSION }}.json
          kubectl logs -n gatekeeper-system -l app=ratify --tail=-1 > logs-ratify-preinstall-${{ matrix.KUBERNETES_VERSION }}-${{ matrix.GATEKEEPER_VERSION }}-rego-policy.json
          kubectl logs -n gatekeeper-system -l app.kubernetes.io/name=ratify --tail=-1 > logs-ratify-${{ matrix.KUBERNETES_VERSION }}-${{ matrix.GATEKEEPER_VERSION }}-rego-policy.json
      - name: Upload artifacts
        uses: actions/upload-artifact@6f51ac03b9356f520e9adb1b1b7802705f340c2b # v4.5.0
        if: ${{ always() }}
        with:
          name: e2e-logs-${{ inputs.k8s_version }}-${{ inputs.gatekeeper_version }}
          path: |
            logs-*.json
